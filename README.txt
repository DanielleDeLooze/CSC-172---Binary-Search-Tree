Author: Danielle DeLooze
Student ID: 29493487
Email: ddelooze@u.rochester.edu
Project: Project 3 Point Location

Description: This project is for CSC 172 Data Structures and Algorithms. It is project #3: Point Location. In this project we had to tell if two point given were in the same
region of a unit square divided by a certain amount of lines. To acomplish this, I constructed a binary tree that represented the regions of space seperated by the lines.
The null external nodes represented the regions in space. To build the tree, I would insert one line at a time in order. If the line intersected a line it would be inserted into both sides of the tree. If the line was to the right of a parent line it would be added to the right. If the line was to the left of the parent line it would be added to the left of the line. Once this tree was constructed it was easy to tell if two points were in the same region. Using the ccw algorithm, you could compare a point to the lines in the tree. If the two points ever had differnt ccw values for the same line, they are not in the same region. But if the algorithm gets all the way to the null value, that means that they never had differing ccw values, so they must be in the same region. This program also outputs the total number of external nodes and the average external path length. As the number of lines added to the tree increases, these two values increase as well. For example, when using the given 5 example lines there is 14 external nodes and the average path length is 3. But when you use just 3 of these lines the external nodes decrease to 6 and the average path length is 2. However, the average external path length increases much slower than the number of external nodes. In this folder, I'd included 5 source code files. Comparer is the source code that contains my main method and some methods used to compare. BT contains the code for my binary tree. Line includes a class for simple lines. Points includes a class for simple points. Finally Node includes the node class that I created. I've also included the test file that I was using for my output file. The biggest trouble that I had with this lab was figuring out how to use the ccw algorithm that Pawlicki provided, but I figured this out after some thorough analysis.